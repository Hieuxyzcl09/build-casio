name: Build, Translate, and Release APK

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout CasioEmuAndroid repository
      uses: actions/checkout@v4
      with:
        repository: telecomadm1145/CasioEmuAndroid

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Set up Android SDK
      uses: android-actions/setup-android@v3

    - name: Accept Android SDK licenses
      run: yes | sdkmanager --licenses

    - name: Install necessary tools
      run: |
        sudo apt-get update
        sudo apt-get install -y gettext python3-pip
        pip3 install googletrans==3.1.0a0

    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew

    - name: Download dependencies
      run: ./gradlew dependencies

    - name: Build APKs
      run: |
        export ANDROID_SDK_ROOT=$ANDROID_HOME
        ./gradlew clean assembleRelease --no-daemon --warning-mode all --stacktrace

    - name: List APK files
      run: |
        echo "APK files:"
        find . -name "*.apk"

    - name: Process APKs
      run: |
        mkdir -p apks
        
        process_apk() {
          local INPUT=$1
          local OUTPUT=$2
          echo "Processing APK: $INPUT -> $OUTPUT"
          
          if [ ! -f "$INPUT" ]; then
            echo "Error: Input file $INPUT does not exist"
            return 1
          fi
          
          mkdir -p "$(dirname "$OUTPUT")"
          
          ZIPALIGN="$(find $ANDROID_HOME/build-tools -name zipalign | sort -r | head -n 1)"
          if [ -z "$ZIPALIGN" ]; then
            echo "Error: zipalign tool not found"
            exit 1
          fi
          
          if ! "$ZIPALIGN" -v 4 "$INPUT" "$OUTPUT"; then
            echo "Error: zipalign failed for $INPUT"
            return 1
          fi
          
          if [ ! -f ~/.android/debug.keystore ]; then
            mkdir -p ~/.android
            keytool -genkey -v -keystore ~/.android/debug.keystore -storepass android -alias androiddebugkey -keypass android -keyalg RSA -keysize 2048 -validity 10000 -dname "CN=Android Debug,O=Android,C=US"
          fi
          
          APKSIGNER="$(find $ANDROID_HOME/build-tools -name apksigner | sort -r | head -n 1)"
          if [ -z "$APKSIGNER" ]; then
            echo "Error: apksigner tool not found"
            exit 1
          fi
          
          if ! "$APKSIGNER" sign --ks ~/.android/debug.keystore --ks-key-alias androiddebugkey --ks-pass pass:android --key-pass pass:android "$OUTPUT"; then
            echo "Error: apksigner failed for $OUTPUT"
            return 1
          fi
          
          echo "Successfully processed $OUTPUT"
        }
        
        APK_FILES=$(find . -name "*-release-unsigned.apk")
        if [ -z "$APK_FILES" ]; then
          echo "Warning: No unsigned release APK files found"
          APK_FILES=$(find . -name "*.apk")
          if [ -z "$APK_FILES" ]; then
            echo "Error: No APK files found at all"
            exit 1
          fi
        fi
        for APK in $APK_FILES; do
          BASENAME=$(basename "$APK")
          OUTPUT_APK="apks/${BASENAME%.apk}-signed.apk"
          process_apk "$APK" "$OUTPUT_APK"
        done

    - name: Upload APKs
      uses: actions/upload-artifact@v3
      with:
        name: apks
        path: apks/*.apk

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release ${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Upload Release Assets
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: ./apks/*.apk
        tag_name: v${{ github.run_number }}
